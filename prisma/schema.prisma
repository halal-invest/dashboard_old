generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

//blog section
model Categories {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  posts     Posts[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Posts {
  id          Int         @id @default(autoincrement())
  title       String
  slug        String      @unique
  image       String?
  author      String
  content     String      @db.Text
  category    Categories? @relation(fields: [category_id], references: [id])
  category_id Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([category_id])
}

//authentication
model Permissions {
  id          Int      @id @unique @default(autoincrement())
  title       String   @unique
  description String?
  roles       Roles[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Roles {
  id          Int           @id @unique @default(autoincrement())
  title       String        @unique
  description String?
  permissions Permissions[]
  // profiles    Profile[]
  isActive    Boolean       @default(true)
  isDeleted   Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  users       Users[]
}

model Users {
  id             Int     @id @default(autoincrement())
  name           String?
  whatsapp       String?
  address        String?
  email          String?
  email_verified Boolean @default(false)
  password       String?

  phone          String?
  phone_verified Boolean @default(false)

  isActive  Boolean @default(true)
  isDeleted Boolean @default(false)
  roles     Roles[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Profile   Profiles?
  Projects  Projects[]
}

model Profiles {
  id               Int     @id @default(autoincrement())
  user_id          Int     @unique
  user             Users   @relation(fields: [user_id], references: [id])
  personal_photo   String?
  father_name      String?
  job_title        String?
  dob              String?
  address          String?
  city             String? @default("Dhaka")
  country          String? @default("Bangladesh")
  postal_code      String?
  facebook_profile String?
  whatsapp_no      String?
  repayment_method String?
  nid              String?
  nominee_nid      String?
  nominee_name     String?
  nominee_phone    String?
  gender           String?

  bank_name            String?
  account_no           String?
  account_holders_name String?
  branch_name          String?
  routing_no           String?
  district             String?
  bkash_no             String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id                   Int     @id @default(autoincrement())
  logo                 String?
  title                String? @unique
  admin_email          String? @unique
  admin_phone          String?
  business_address     String?
  business_description String?

  email_host     String?
  email_user     String?
  email_password String?
  email_from     String?

  otp_api_token String?
}

model Types {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Projects    Projects[]
}

model Projects {
  id                                         Int      @id @default(autoincrement())
  type_id                                    Int
  type                                       Types    @relation(fields: [type_id], references: [id])
  user_id                                    Int
  user                                       Users    @relation(fields: [user_id], references: [id])
  active                                     String //active, finished, running
  title                                      String
  description                                String?
  repayment_type                             String //fixed, not_fixed
  fixed_percent                              String
  image_1                                    String
  image_2                                    String
  image_3                                    String
  location                                   String
  duration                                   String
  start_date_to_invest                       String
  last_date_to_invest                        String
  investment_goal                            String
  min_investment                             String
  projected_roi                              String
  risk_grade                                 String
  repayment                                  String
  raised                                     String
  being_processed                            String
  overview                                   String   @db.Text
  deed                                       String   @db.Text
  downloadableUrl                            String   @db.Text
  intro_title                                String   @db.Text
  intro_description                          String   @db.Text
  intro_explore_fb                           String   @db.Text
  intro_explore_website                      String   @db.Text
  intro_explore_linkedin                     String   @db.Text
  intro_office_address                       String   @db.Text
  intro_owners_description                   String   @db.Text
  intro_value_proposition                    String   @db.Text
  contract_durationOfInvestment_description  String   @db.Text
  contract_projected_roi_description         String   @db.Text
  contract_conditions                        String   @db.Text
  shariah_underlying_contracts_description   String   @db.Text
  shariah_approval_from_scholars_description String   @db.Text
  risks_business_assessment                  String   @db.Text
  risks_possession_of_assets                 String   @db.Text
  risks_repayment_delay                      String   @db.Text
  risks_security                             String   @db.Text
  showing_related_updates                    String   @db.Text
  slug                                       String   @db.Text
  letter_of_authorization                    String   @db.Text
  letter_of_authorization_bangla             String   @db.Text
  payment_schedule                           String   @db.Text
  commission                                 String
  profit                                     String
  disclaimer                                 String   @db.Text
  project_duration                           String
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt

  @@index([type_id])
  @@index([user_id])
}
