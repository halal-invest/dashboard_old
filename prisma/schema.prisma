generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int           @id @default(autoincrement())
  title       String
  slug        String        @unique
  image       String
  subcategory SubCategory[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model SubCategory {
  id             Int             @id @default(autoincrement())
  title          String
  slug           String          @unique
  image          String
  category       Category        @relation(fields: [categoryId], references: [id])
  categoryId     Int             @unique
  subSubCategory SubSubCategory?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model SubSubCategory {
  id            Int         @id @default(autoincrement())
  title         String
  slug          String      @unique
  image         String
  subCategoryId Int         @unique
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  Product       Product[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Product {
  id               Int            @id @default(autoincrement())
  title            String
  slug             String         @unique
  sku              String         @unique
  season           String?
  subSubCategoryId Int
  subSubCategory   SubSubCategory @relation(fields: [subSubCategoryId], references: [id])
  sizeProducts     SizeProduct[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Media {
  id            Int          @id @default(autoincrement())
  title         String
  image         String
  sizeProduct   SizeProduct? @relation(fields: [sizeProductId], references: [id])
  sizeProductId Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Size {
  id           Int           @id @default(autoincrement())
  title        String
  sizeProducts SizeProduct[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model SizeProduct {
  id               Int      @id @default(autoincrement())
  productId        Int
  product          Product  @relation(fields: [productId], references: [id])
  sizeId           Int
  size             Size     @relation(fields: [sizeId], references: [id])
  stock            String?
  price            String?
  originalPrice    String?
  images           Media[]
  shortDescription String   @db.Text
  description      String?  @db.Text
  bestDeal         Boolean
  discountedSale   Boolean
  colors           Color[]
  orders           Order[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Color {
  id           Int           @id @default(autoincrement())
  title        String
  colorCode    String
  sizeProducts SizeProduct[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Order {
  id           Int           @id @default(autoincrement())
  name         String?
  email        String?
  phone        String?
  address      String?
  city         String?       @default("Dhaka")
  country      String?       @default("Bangladesh")
  postal_code  String?
  sizeProducts SizeProduct[]
  Profile      Profile?      @relation(fields: [profileId], references: [id])
  profileId    Int?
  total        String
  subTotal     String

  paymentMethods     PaymentMethods? @relation(fields: [paymentMethodsId], references: [id])
  paymentMethodsId   Int?
  transactionPhoneNo String
  transactionNo      String

  deliveryCostId Int
  deliveryCost   DeliveryCost @relation(fields: [deliveryCostId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model PaymentMethods {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DeliveryCost {
  id        Int      @id @default(autoincrement())
  areaName  String
  cost      String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubBLog {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  blogs     Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  image     String?
  author    String
  content   String   @db.Text
  subBlog   SubBLog? @relation(fields: [subBlogId], references: [id])
  subBlogId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//authentication
model Permission {
  id          Int      @id @unique @default(autoincrement())
  title       String   @unique
  description String?
  roles       Role[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          Int          @id @unique @default(autoincrement())
  title       String       @unique
  description String
  permissions Permission[]
  profiles    Profile[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  password  String?
  verified  Boolean  @default(false)
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OtpUser {
  id        Int      @id @default(autoincrement())
  phone     String   @unique
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id          Int      @id @default(autoincrement())
  userId      Int?     @unique
  user        User?    @relation(fields: [userId], references: [id])
  otpUserId   Int?     @unique
  optUser     OtpUser? @relation(fields: [otpUserId], references: [id])
  name        String?
  email       String?
  phone       String?
  roles       Role[]
  address     String?
  city        String?  @default("Dhaka")
  country     String?  @default("Bangladesh")
  postal_code String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
